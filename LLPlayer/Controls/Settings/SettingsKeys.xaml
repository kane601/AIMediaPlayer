<UserControl x:Class="AIMediaPlayer.Controls.Settings.SettingsKeys"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:AIMediaPlayer.Controls.Settings"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:SettingsKeysVM}"
             d:Foreground="White"
             d:Background="Black"
             d:DesignHeight="450" d:DesignWidth="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding CmdLoad}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Text="Keys"
            FontSize="24"
            FontWeight="Bold"
            Margin="0 0 0 16" />

        <Grid Grid.Row="1">
            <!-- TODO: L: Allow auto-entry of modifier keys? -->
            <!-- TODO: L: Detect default shortcuts and change color -->
            <DataGrid
                x:Name="KeyBindingsDataGrid"
                SelectedItem="{Binding SelectedKeyBinding, Mode=TwoWay}"
                SelectionChanged="KeyBindingsDataGrid_OnSelectionChanged"
                ItemsSource="{Binding KeyBindings}"
                Margin="0"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                AutoGenerateColumns="False">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem
                                        Header="Clone Row"
                                        Command="{Binding CmdCloneRow}"
                                        CommandParameter="{Binding}" />
                                    <MenuItem
                                        Header="Delete Row"
                                        Command="{Binding CmdDeleteRow}"
                                        CommandParameter="{Binding}" />
                                    <MenuItem
                                        Header="Input Enter"
                                        Command="{Binding CmdSetKey}"
                                        CommandParameter="{x:Static Key.Enter}" />

                                    <!--TODO: L: Create Reset key -->
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Header="Error"
                        SortMemberPath="Duplicated">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border
                                    Background="#01000000"
                                    Cursor="Hand"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding Duplicated, Converter={StaticResource BooleanToVisibilityConv}}"
                                    ToolTip="{Binding DuplicatedInfo}"
                                    ToolTipService.InitialShowDelay="100"
                                    HorizontalAlignment="Center">
                                    <materialDesign:PackIcon
                                        Foreground="{DynamicResource MaterialDesign.Brush.Secondary.Light}"
                                        Width="20"
                                        Height="20"
                                        Kind="AlertCircle" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridCheckBoxColumn
                        Header="Enabled" Binding="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="80" />

                    <DataGridTemplateColumn
                        Header="Key"
                        SortMemberPath="Key">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="16" Text="{Binding Key, Converter={StaticResource KeyToStringConv}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <local:KeyCaptureTextBox
                                    VerticalAlignment="Center"
                                    FontSize="16" Key="{Binding Key, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignTextBox}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn
                        Header="Action"
                        SortMemberPath="Action.DisplayName">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    VerticalAlignment="Center"
                                    ToolTipService.InitialShowDelay="200"
                                    ToolTipService.Placement="Left"
                                    ToolTipService.HorizontalOffset="-14"
                                    ToolTip="{Binding Action.Description}"
                                    Text="{Binding Action.DisplayName}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <DataGridTemplateColumn.CellEditingTemplate>
                            <!--TODO: L: add incremental search -->
                            <DataTemplate>
                                <Grid>
                                    <ComboBox
                                        ItemsSource="{Binding DataContext.Actions, ElementName=KeyBindingsDataGrid}"
                                        DisplayMemberPath="DisplayName"
                                        SelectedItem="{Binding Action, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsTextSearchEnabled="True"
                                        Loaded="ComboBox_Loaded">

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>

                                        <ComboBox.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock
                                                            Text="{Binding Name}"
                                                            FontWeight="Bold"
                                                            FontSize="14"
                                                            Margin="0 5"
                                                            Foreground="{DynamicResource MaterialDesign.Brush.Primary}"/>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </ComboBox.GroupStyle>

                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                                                <Setter Property="ToolTip" Value="{Binding Description}"/>
                                                <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
                                                <Setter Property="ToolTipService.Placement" Value="Left"/>
                                                <Setter Property="ToolTipService.HorizontalOffset" Value="-14"/>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                    </ComboBox>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridCheckBoxColumn Header="Ctrl" Binding="{Binding Ctrl,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Header="Shift" Binding="{Binding Shift, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Header="Alt" Binding="{Binding Alt, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Header="IsKeyUp" Binding="{Binding IsKeyUp, UpdateSourceTrigger=PropertyChanged}" />

                    <DataGridTemplateColumn Header="Delete" Width="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button
                                    ToolTip="Delete"
                                    Style="{StaticResource MaterialDesignIconButton}"
                                    HorizontalAlignment="Center"
                                    Width="30"
                                    Height="30"
                                    Command="{Binding CmdDeleteRow}"
                                    CommandParameter="{Binding}">
                                    <materialDesign:PackIcon Kind="Delete" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <!--Spinner over DataGrid -->
            <ProgressBar
                Visibility="{Binding CmdLoad.IsExecuting, Converter={StaticResource BooleanToVisibilityConv}}"
                IsIndeterminate="True"
                Width="40"
                Height="40"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Foreground="{DynamicResource MaterialDesign.Brush.Primary}" />
        </Grid>

        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 5 0 0">
            <Button Margin="5" Content="Add" Command="{Binding CmdAdd}" />
            <Button Margin="5" Content="Load" Command="{Binding CmdLoad}" />
            <Button Margin="5" Content="Apply" Command="{Binding CmdApply}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedSecondaryButton}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                <Setter Property="ToolTipService.InitialShowDelay" Value="100" />
                                <Setter Property="ToolTip" Value="Cannot save because of duplicate shortcut key.
Please disable or delete it or change the modifier key to make it unique." />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
